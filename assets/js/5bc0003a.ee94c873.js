"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[635],{29122:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=t(74848),r=t(28453);const i={sidebar_position:2},a="System Block Diagram",o={id:"requirements/system-block-diagram",title:"System Block Diagram",description:"Figure 1. High level design of Devs and Dragons",source:"@site/docs/requirements/system-block-diagram.md",sourceDirName:"requirements",slug:"/requirements/system-block-diagram",permalink:"/project-techtrek/docs/requirements/system-block-diagram",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Ishan Aggarwal",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Overview",permalink:"/project-techtrek/docs/requirements/system-overview"},next:{title:"General Requirements",permalink:"/project-techtrek/docs/requirements/general-requirements"}},l={},c=[{value:"Description",id:"description",level:2}];function d(e){const s={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"system-block-diagram",children:"System Block Diagram"}),"\n",(0,n.jsx)("iframe",{width:"1260",height:"446",src:"https://media.discordapp.net/attachments/1303099585173917737/1315507795898142783/System_Block_Diag.png?ex=6757a99b&is=6756581b&hm=4ae346db56b40483e1e0c1bbf0291ddf4103ef5d70059bc6f873b123644e42c3&=&format=webp&quality=lossless&width=1440&height=510",frameborder:"0",scrolling:"no",allow:"fullscreen; clipboard-read; clipboard-write",allowfullscreen:!0}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Figure 1."})," High level design of Devs and Dragons"]}),"\n",(0,n.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Figure 1"})," above illustrates Devs and Dragons's full stack. The user interacts with the frontend that is built using ",(0,n.jsx)(s.strong,{children:"React"}),". The frontend will handle user actions and sends ",(0,n.jsx)(s.strong,{children:"RESTful API"})," requests to the backend."]}),"\n",(0,n.jsxs)(s.p,{children:["The backend is built using ",(0,n.jsx)(s.strong,{children:"Flask"}),". It will process game logic, verify user inputs, and manage the game state. The backend communicates with the ",(0,n.jsx)(s.strong,{children:"MongoDB"})," database to store and retrieve data such as quest made, guilds joined, and in-game answers."]}),"\n",(0,n.jsxs)(s.p,{children:["Multiplayer synchronization will be managed by using ",(0,n.jsx)(s.strong,{children:"Flask"})," ensuring that all players remain in sync during a quest."]}),"\n",(0,n.jsxs)(s.p,{children:["The back end will use ",(0,n.jsx)(s.strong,{children:"OpenAI API"})," calls to comunicate with the GPT bot. The GPT bot will be utilized for three tasks:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Generate code problems for quests."}),"\n",(0,n.jsx)(s.li,{children:"Generate a storyline to sequence problems within a quest."}),"\n",(0,n.jsx)(s.li,{children:"Grade user answers during a quest."}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var n=t(96540);const r={},i=n.createContext(r);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);