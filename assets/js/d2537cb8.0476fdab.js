"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7837],{85374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(74848),i=t(28453);const o={sidebar_position:6},s="Version Control",c={id:"system-architecture/version-control",title:"Version Control",description:"Overview",source:"@site/docs/system-architecture/version-control.md",sourceDirName:"system-architecture",slug:"/system-architecture/version-control",permalink:"/project-techtrek/docs/system-architecture/version-control",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-techtrek/edit/main/documentation/docs/system-architecture/version-control.md",tags:[],version:"current",lastUpdatedBy:"Jericho R Orienza",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"Development Environment",permalink:"/project-techtrek/docs/system-architecture/development-environment"},next:{title:"API Specification",permalink:"/project-techtrek/docs/category/api-specification"}},a={},l=[{value:"Overview",id:"overview",level:2},{value:"Branching",id:"branching",level:2},{value:"Branch Protection",id:"branch-protection",level:2},{value:"Docusaurus Build",id:"docusaurus-build",level:2}];function u(e){const n={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"version-control",children:"Version Control"}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["We're managing Devs and Dragons using ",(0,r.jsx)(n.strong,{children:"Git"})," and ",(0,r.jsx)(n.strong,{children:"GitHub"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Our git repository combines three distinct parts of our project:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Docusaurus Documentation."}),"\n",(0,r.jsx)(n.li,{children:"Flask Web Server (MongoDB)."}),"\n",(0,r.jsx)(n.li,{children:"Core user interface using React."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"branching",children:"Branching"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Branches are created based on the latest ",(0,r.jsx)(n.strong,{children:"main"})," branch commit."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"branch-protection",children:"Branch Protection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We require a pull request before merging into main."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"docusaurus-build",children:"Docusaurus Build"}),"\n",(0,r.jsxs)(n.p,{children:["We use ",(0,r.jsx)(n.strong,{children:"GitHub Actions"})," on our ",(0,r.jsx)(n.strong,{children:"main"})," branch to build our Docusaurus project documentation dynamically. Docusaurus uses the text and configuration details from Markdown and JSON files to build an HTML-based documentation website."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(96540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);