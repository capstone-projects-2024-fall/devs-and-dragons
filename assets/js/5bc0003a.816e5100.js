"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[635],{29122:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=s(74848),r=s(28453);const i={sidebar_position:2},o="System Block Diagram",a={id:"requirements/system-block-diagram",title:"System Block Diagram",description:"Figure 3. High level design of the Tech Quest application",source:"@site/docs/requirements/system-block-diagram.md",sourceDirName:"requirements",slug:"/requirements/system-block-diagram",permalink:"/project-techtrek/docs/requirements/system-block-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-techtrek/edit/main/documentation/docs/requirements/system-block-diagram.md",tags:[],version:"current",lastUpdatedBy:"Jake Creasy",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"System Overview",permalink:"/project-techtrek/docs/requirements/system-overview"},next:{title:"General Requirements",permalink:"/project-techtrek/docs/requirements/general-requirements"}},c={},l=[{value:"Description",id:"description",level:2}];function d(e){const t={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"system-block-diagram",children:"System Block Diagram"}),"\n",(0,n.jsx)("iframe",{width:"768",height:"432",src:"https://miro.com/app/embed/uXjVKgS0PLA=/?pres=1&frameId=3458764601497934026&embedId=647218527620",frameborder:"0",scrolling:"no",allow:"fullscreen; clipboard-read; clipboard-write",allowfullscreen:!0}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Figure 3."})," High level design of the Tech Quest application"]}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Figure 3"})," above illustrates Devs and Dragons's full stack. The user interacts with the frontend that is built using ",(0,n.jsx)(t.strong,{children:"React"}),". The game component is created using a react library called, ",(0,n.jsx)(t.strong,{children:"React-Game-Kit"}),". The frontend will handle user actions and sends ",(0,n.jsx)(t.strong,{children:"RESTful API"})," requests to the backend."]}),"\n",(0,n.jsxs)(t.p,{children:["The backend is built using ",(0,n.jsx)(t.strong,{children:"Flask"}),". It will process game logic, verify user inputs, and manage the game state. The backend communicates with the ",(0,n.jsx)(t.strong,{children:"MongoDB"})," database, hosted on ",(0,n.jsx)(t.strong,{children:"AWS,"})," to store and retrieve data such as quest made, guilds joined, and in-game answers."]}),"\n",(0,n.jsxs)(t.p,{children:["Multiplayer synchronization will be managed by using ",(0,n.jsx)(t.strong,{children:"AWS,"})," ensuring that all players remain in sync during a quest."]}),"\n",(0,n.jsxs)(t.p,{children:["The back end will use ",(0,n.jsx)(t.strong,{children:"OpenAI API"})," calls to comunicate with the GPT bot. The GPT bot will be utilized for three tasks:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"generate code problems for quests"}),"\n",(0,n.jsx)(t.li,{children:"generate a storyline to sequence problems within a quest"}),"\n",(0,n.jsx)(t.li,{children:"grade user answers during a quest"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);