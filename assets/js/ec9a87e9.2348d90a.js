"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6236],{64244:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(74848),a=n(28453);const r={sidebar_position:4},i="Database Diagrams",o={id:"system-architecture/database-diagrams",title:"Database Diagrams",description:"The diagram shows the individual tables and their relations in our MongoDB database. The tables provide this description:",source:"@site/docs/system-architecture/database-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/database-diagrams",permalink:"/project-techtrek/docs/system-architecture/database-diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-techtrek/edit/main/documentation/docs/system-architecture/database-diagrams.md",tags:[],version:"current",lastUpdatedBy:"justanimish",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Sequence Diagrams",permalink:"/project-techtrek/docs/system-architecture/sequence-diagrams"},next:{title:"Development Environment",permalink:"/project-techtrek/docs/system-architecture/development-environment"}},c={},d=[];function l(e){const t={h1:"h1",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"database-diagrams",children:"Database Diagrams"}),"\n",(0,s.jsx)(t.mermaid,{value:'erDiagram\nUSER ||--|| AVATAR : owns\nUSER ||--o{ QUEST : "created"\n\n    USER {\n        string username PK\n        string password_hash "PBKDF2"\n        string email\n        list quests_made "FK to QUEST table"\n    }\n\n    AVATAR {\n        int avatar_id PK\n        string owner FK "USER - username"\n        string avatar_name\n        enum avatar_type\n        int total_health\n        datetime last_interaction\n        datetime birthday\n    }\n\n    QUEST {\n        int quest_id PK\n        enum difficulty "EASY, MEDIUM, HARD"\n        int number_of_problems\n        string problem_topic\n        int time_limit \n        string creator FK "USER - username"\n        string enemy\n        string background\n    }\n'}),"\n",(0,s.jsx)(t.p,{children:"The diagram shows the individual tables and their relations in our MongoDB database. The tables provide this description:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"USER"}),": The user holds the core information for the quests he wants to participate in. A user can create multiple quests."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"USER (many-to-many with QUEST): A USER can create many QUESTs, but each quest belongs to one user as the creator."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"AVATAR"}),": Represents the avatar created and owned by the user. Each avatar belongs to only one user."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"AVATAR (one-to-one with USER): One USER can own only one avatars."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"QUEST"}),": Contains information about quests. A user creates a quest."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"QUEST (many-to-one with USER): Each QUEST is created by one USER."}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(96540);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);