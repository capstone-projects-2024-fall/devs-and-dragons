"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6024],{39553:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(74848),r=s(28453);const i={sidebar_position:4},l="Features and Requirements",a={id:"requirements/features-and-requirements",title:"Features and Requirements",description:"Functional Requirements (sourced from Use Cases)",source:"@site/docs/requirements/features-and-requirements.md",sourceDirName:"requirements",slug:"/requirements/features-and-requirements",permalink:"/project-techtrek/docs/requirements/features-and-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-techtrek/edit/main/documentation/docs/requirements/features-and-requirements.md",tags:[],version:"current",lastUpdatedBy:"Jericho R Orienza",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"General Requirements",permalink:"/project-techtrek/docs/requirements/general-requirements"},next:{title:"Use-case descriptions",permalink:"/project-techtrek/docs/requirements/use-case-descriptions"}},o={},c=[{value:"Functional Requirements (sourced from Use Cases)",id:"functional-requirements-sourced-from-use-cases",level:2},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:2}];function d(e){const n={h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"features-and-requirements",children:"Features and Requirements"}),"\n",(0,t.jsx)(n.h2,{id:"functional-requirements-sourced-from-use-cases",children:"Functional Requirements (sourced from Use Cases)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to create accounts."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to log into created accounts."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to create and customize an Avatar for themselves."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:'Users must be able to create "single-player" or "solo" quests to play them by themselves.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:'Users must be able to create "multiplayer" or "two-player" quests to play them with others.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"For single-player and multiplayer quests: A user must be able to create quests by filling out a form that takes in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Quest Title"}),"\n",(0,t.jsx)(n.li,{children:"Coding Topic"}),"\n",(0,t.jsx)(n.li,{children:"Amount of Problems (3 - 8)"}),"\n",(0,t.jsx)(n.li,{children:"Difficulty Level"}),"\n",(0,t.jsx)(n.li,{children:"Enemy"}),"\n",(0,t.jsx)(n.li,{children:"Background"}),"\n",(0,t.jsx)(n.li,{children:"Programming Language"}),"\n",(0,t.jsx)(n.li,{children:"Quest Description"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"A party code must be generated for every created multiplayer quest. The code is needed so others can form/join a party with the original user (who created the quest)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to join existing parties/rooms with the correct code."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users can create guilds to host multiple guild parties and assign multiple quests."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users can start, play, and finish a quest solo or with a party."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"For multiplayer quests, users must take turns answering a question/problem within a quest."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The quest/game component must be loaded and presented on a 2D plane covering the entire screen."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The quest/game component must include a timer for each party member."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The quest/game component must be able to generate coding problems based on the topic and the difficulty selected in the quest form."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The quest/game component must display the selected background in the quest form."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users can opt-out or leave a started quest."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to view, access, and modify a code editor component to submit their answers."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to toggle between dark and light mode on the code editor during ongoing quests (depending on their preference)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The dragon sprite, representing the enemy, should be able to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Take damage (its health bar decreasing)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Animate actions (taking or inflicting damage, idle)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The user sprite, representing the user, should be able to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Take damage (its health bar decreasing)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Animate actions (taking or inflicting damage, idle)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The GPT component of the game must be able to grade answers based on correct and incorrect user(s) input:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to see GPT's grading feedback during an ongoing quest so they may know if they can continue to the next question."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"GPT must not mark an incorrect answer (such as a blank answer, an answer with content irrelevant to the question, or an answer without an actual algorithm) as a valid solution."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Inaccurately marking answers as valid would let users wrongly move on to the next question."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"GPT must rate the answers as valid or invalid, determining the course of the quest/game."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Answer quality must be indicated/viewable to the user using five stars."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:'User(s) must only be able to move on to the next question after they submit a "valid" answer. Invalid answers must not allow the user(s) to continue to the next set of questions of the quest.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Answers that are not at least 50% correct are marked invalid by GPT."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Answers that are at least 50% correct are marked valid by GPT."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The game timer reaching 0 must produce a defeat result unless the dragon's/enemy's health bar reaches 0 by that time (context: all questions have not been correctly answered yet)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The health bar of a dragon reaching 0 must trigger a victory result."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The health bar of the user(s) reaching 0 must trigger a defeat result."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must see a quest result at the end of each quest (either victory or defeat)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Users must be able to log out."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All user data must be stored in and retrieved from the MongoDB database using the Flask backend."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"non-functional-requirements",children:"Non-Functional Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The application must support multiple users via WebSockets."}),"\n",(0,t.jsx)(n.li,{children:"The backend must generate questions based on the topic the user selected."}),"\n",(0,t.jsx)(n.li,{children:"The backend must generate a storyline for the quest based on the quest form filled out by the user."}),"\n",(0,t.jsx)(n.li,{children:"The game must sequence through each question utilizing the storyline generated."}),"\n",(0,t.jsx)(n.li,{children:"GPT response time during grading must be within 1 to 5 seconds."}),"\n",(0,t.jsx)(n.li,{children:"Automated daily backups must be performed."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);