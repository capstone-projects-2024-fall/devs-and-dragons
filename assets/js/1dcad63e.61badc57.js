"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2994],{95156:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=t(74848),s=t(28453);const i={sidebar_position:3},r="Sequence Diagrams",c={id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"Use Case 1 - Account Creation",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/project-techtrek/docs/system-architecture/sequence-diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/capstone-projects-2024-fall/project-techtrek/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"Prince Nahar",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Class Diagrams",permalink:"/project-techtrek/docs/system-architecture/class-diagrams"},next:{title:"Database Diagrams",permalink:"/project-techtrek/docs/system-architecture/database-diagrams"}},o={},d=[{value:"Use Case 1 - Account Creation",id:"use-case-1---account-creation",level:2},{value:"Use Case 2 - Logging in",id:"use-case-2---logging-in",level:2},{value:"Use Case 3 - Quest Creation",id:"use-case-3---quest-creation",level:2},{value:"Use Case 4 - Create Avatar",id:"use-case-4---create-avatar",level:2},{value:"Use Case 5 - Adding a Friend",id:"use-case-5---adding-a-friend",level:2},{value:"Use Case 6 - Creating a Party to Start a Quest Outside of a Guild",id:"use-case-6---creating-a-party-to-start-a-quest-outside-of-a-guild",level:2},{value:"Use Case 7 - Join a Party",id:"use-case-7---join-a-party",level:2},{value:"Use Case 8 - Guild Creation",id:"use-case-8---guild-creation",level:2},{value:"Use Case 9 - Assign Quest to Guild",id:"use-case-9---assign-quest-to-guild",level:2},{value:"Use Case 10 - Join a Guild",id:"use-case-10---join-a-guild",level:2},{value:"Use Case 11 - Creating a Guild Party To Start a Quest",id:"use-case-11---creating-a-guild-party-to-start-a-quest",level:2},{value:"Use Case 12 - Solving a Problem in a Quest (gameplay)",id:"use-case-12---solving-a-problem-in-a-quest-gameplay",level:2}];function l(e){const a={h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"sequence-diagrams",children:"Sequence Diagrams"}),"\n",(0,n.jsx)(a.h2,{id:"use-case-1---account-creation",children:"Use Case 1 - Account Creation"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to create a new account."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant DevsAndDragonsApp as LandingPage\n    participant RegistrationForm\n    participant Backend\n    participant Database\n\n    \n    User->>DevsAndDragonsApp: Opens application for the first time\n    activate User\n    activate DevsAndDragonsApp\n    DevsAndDragonsApp--\x3e>User: Displays home screen with "Create Account" button\n    DevsAndDragonsApp->>RegistrationForm: Selects "Create Account" button\n    deactivate DevsAndDragonsApp\n\n    \n    activate RegistrationForm\n    RegistrationForm--\x3e>User: Displays account registration form\n    User->>RegistrationForm: Fills out form (username, password, email)\n    RegistrationForm->>Backend: Sends form data to backend\n    deactivate RegistrationForm\n\n    activate Backend\n    Backend->>Database: Checks if username or email already exists\n    activate Database\n    Database--\x3e>Backend: Returns validation result\n    deactivate Database\n    Backend--\x3e>RegistrationForm: Returns success or error message\n    deactivate Backend\n    activate RegistrationForm\n    RegistrationForm--\x3e>User: Displays success message or prompts to try again (if fields are incorrect)\n    deactivate RegistrationForm\n    deactivate User'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"The user opens the Devs & Dragons application for the first time."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u2018Create Account\u2019 button to begin the account registration process."}),"\n",(0,n.jsx)(a.li,{children:"The user enters the desired username, password, and email into the form."}),"\n",(0,n.jsx)(a.li,{children:"If any fields are filled out incorrectly, the user is notified and asked to try again."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-2---logging-in",children:"Use Case 2 - Logging in"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to log in to an account they created"})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage as LandingPage\n    participant LoginForm\n    participant Backend\n    participant EmailService\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to landing page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    HomePage->>LoginForm: Selects "Login" button\n    deactivate HomePage\n\n    activate LoginForm\n    LoginForm--\x3e>User: Displays login form\n    User->>LoginForm: Enters username and password\n    LoginForm->>Backend: Verifies credentials\n    activate Backend\n    Backend->>Database: Checks credentials\n    activate Database\n    Database--\x3e>Backend: Credentials verified\n    deactivate Database\n    Backend->>EmailService: Request to send 2FA code\n    activate EmailService\n    EmailService--\x3e>User: Sends email with 2FA code\n    deactivate EmailService\n    User->>LoginForm: Enters 2FA code\n    LoginForm->>Backend: Verifies 2FA code\n    Backend->Database: Confirms 2FA\n    activate Database\n    Database--\x3e>Backend: 2FA code is valid\n    deactivate Database\n    Backend--\x3e>LoginForm: 2FA verified\n    deactivate Backend\n    LoginForm--\x3e>User: Redirects to home page\n    deactivate LoginForm\n\n    LoginForm--\x3e>User: Sends 2FA code to email\n    activate LoginForm\n    LoginForm->>EmailService: Request to send 2FA code\n    activate EmailService\n    EmailService--\x3e>User: Sends email with 2FA code\n    deactivate EmailService\n    deactivate LoginForm\n\n    User->>LoginForm: Enters 2FA code\n    activate LoginForm\n    LoginForm->>Backend: Verifies 2FA code\n    activate Backend\n    Backend->>Database: Confirms 2FA\n    activate Database\n    Database--\x3e>Backend: 2FA code is valid\n    deactivate Database\n    Backend--\x3e>LoginForm: 2FA verified\n    deactivate Backend\n    LoginForm--\x3e>User: Redirects to home page\n    deactivate LoginForm\n    deactivate User'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"The user navigates to the site's landing page"}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u2018login\u2019 button"}),"\n",(0,n.jsx)(a.li,{children:"The user enters their username and password"}),"\n",(0,n.jsx)(a.li,{children:"After providing the correct credentials, the user will receive a 2FA code in their email"}),"\n",(0,n.jsx)(a.li,{children:"The user enters the 2FA code"}),"\n",(0,n.jsx)(a.li,{children:"After providing the correct 2FA code, the user is brought to the home page"}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-3---quest-creation",children:"Use Case 3 - Quest Creation"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to create a new quest."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant QuestTab\n    participant Backend\n    participant GPTBot\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    deactivate HomePage\n\n    User->>QuestTab: Selects "Quests" tab\n    activate QuestTab\n    QuestTab--\x3e>User: Displays "Create Quest" button\n    User->>QuestTab: Selects "Create Quest" button\n    QuestTab--\x3e>User: Displays quest creation form\n    User->>QuestTab: Fills out form \n    QuestTab--\x3e>User: Displays review input option\n    User->>QuestTab: Selects "Confirm" button\n    QuestTab->>Backend: Sends form data to backend\n    deactivate QuestTab\n\n    activate Backend\n    Backend->>GPTBot: Processes request to generate quest\n    activate GPTBot\n    GPTBot--\x3e>Backend: Returns generated quest\n    deactivate GPTBot\n\n    Backend->>Database: Stores generated quest\n    activate Database\n    Database--\x3e>Backend: Quest stored\n    deactivate Database\n\n    Backend--\x3e>QuestTab: Displays the new quest line\n    deactivate Backend\n    activate QuestTab\n    QuestTab--\x3e>User: Displays the new quest line\n    deactivate QuestTab\n    deactivate User'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects the \u201cQuests\u201d tab."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u201cCreate Quest\u201d button."}),"\n",(0,n.jsxs)(a.li,{children:["The user fills out a form for the following:","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Quest Title"}),"\n",(0,n.jsx)(a.li,{children:"Coding Topic"}),"\n",(0,n.jsx)(a.li,{children:"Amount of problems"}),"\n",(0,n.jsx)(a.li,{children:"Difficulty level"}),"\n",(0,n.jsx)(a.li,{children:"Enemy"}),"\n",(0,n.jsx)(a.li,{children:"Background"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:"User reviews their input and selects the \u201cConfirm\u201d button."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-4---create-avatar",children:"Use Case 4 - Create Avatar"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to create their Avatar."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant AvatarTab\n    participant AvatarForm\n    participant Backend\n    participant Database\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home screen with "Avatar" button\n    HomePage->>AvatarTab: Selects "Avatar" button\n    deactivate HomePage\n\n    activate AvatarTab\n    AvatarTab--\x3e>User: Displays "Create Avatar" button\n    User->>AvatarTab: Selects "Create Avatar" button\n    AvatarTab->>AvatarForm: Opens avatar creation form\n    deactivate AvatarTab\n\n    activate AvatarForm\n    AvatarForm--\x3e>User: Displays avatar customization options (hair color, skin color, armor color)\n    User->>AvatarForm: Chooses customization options\n    AvatarForm->>Backend: Sends avatar details to backend\n    deactivate AvatarForm\n\n    activate Backend\n    Backend->>Database: Stores avatar details\n    activate Database\n    Database--\x3e>Backend: Confirms avatar creation\n    deactivate Database\n    Backend--\x3e>AvatarTab: Sends success message to avatar tab\n    deactivate Backend\n\n    activate AvatarTab\n    AvatarTab--\x3e>User: Displays success message and updated avatar preview\n    deactivate AvatarTab\n    deactivate User\n    '}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:'From the homepage, the user selects "Avatar" tab.'}),"\n",(0,n.jsx)(a.li,{children:"The user selects between three avatar options."}),"\n",(0,n.jsxs)(a.li,{children:["The user selects the different customization options for the following:","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Hair color"}),"\n",(0,n.jsx)(a.li,{children:"Skin color"}),"\n",(0,n.jsx)(a.li,{children:"Armor color"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:'User selects "Save Changes" button.'}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-5---adding-a-friend",children:"Use Case 5 - Adding a Friend"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Two users want to add one another to their friends list."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User1\n    actor User2\n    participant HomePage\n    participant FriendsTab\n    participant Backend\n    participant Database\n  \n    User1->>HomePage: Navigates to home page\n    activate User1\n    activate HomePage\n    HomePage--\x3e>User1: Displays home page\n    deactivate HomePage\n    \n    User1->>FriendsTab: Selects "Friends" button\n    activate FriendsTab\n    FriendsTab--\x3e>User1: Displays search bar\n    User1->>FriendsTab: Searches for User2\'s username\n    FriendsTab--\x3e>User1: Displays User2\'s profile\n    User1->>FriendsTab: Selects "Add Friend" button\n    deactivate FriendsTab\n\n    FriendsTab->>Backend: Sends friend request to backend\n    activate Backend\n    Backend->>Database: Stores pending friend request\n    activate Database\n    Database--\x3e>Backend: Confirms storage of friend request\n    deactivate Database\n    Backend--\x3e>User2: Displays friend request notification\n    activate User2\n    deactivate Backend\n\n    User2->>Backend: Selects "Accept" button\n    activate Backend\n    Backend->>Database: Updates friend status in database\n    activate Database\n    Database--\x3e>Backend: Confirms updated friend status\n    deactivate Database\n    Backend--\x3e>FriendsTab: Confirms friend request for both users\n    deactivate Backend\n\n    activate FriendsTab\n    FriendsTab--\x3e>User1: Displays User2 as friend\n    deactivate User1\n    FriendsTab--\x3e>User2: Displays User1 as friend\n    deactivate User2\n    deactivate FriendsTab\n'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects the \u201cFriends\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"User 1 navigates to the search bar and types User 2\u2019s username."}),"\n",(0,n.jsx)(a.li,{children:"User 1 selects User 2\u2019s profile."}),"\n",(0,n.jsx)(a.li,{children:"User 1 selects the \u201cAdd Friend\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"User 2 receives the request and selects \u201cAccept\u201d."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-6---creating-a-party-to-start-a-quest-outside-of-a-guild",children:"Use Case 6 - Creating a Party to Start a Quest Outside of a Guild"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to start a quest outside of a guild."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User as User 1\n    actor Peer as User 2\n    participant HomePage\n    participant QuestTab\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    deactivate HomePage\n\n    User->>QuestTab: Selects "Quests" tab\n    activate QuestTab\n    QuestTab--\x3e>User: Displays "My Quests"\n    User->>QuestTab: Selects "My Quests"\n    QuestTab--\x3e>User: Displays available quests\n    User->>QuestTab: Selects the quest to start\n    QuestTab--\x3e>User: Displays "Start Quest" button\n    User->>QuestTab: Selects "Start Quest" button\n    QuestTab--\x3e>User: Asks to create a party code\n    User->QuestTab: Creates party code\n     QuestTab->>Backend: Sends party code\n    deactivate QuestTab\n\n    activate Backend\n    Backend->>Database: Stores party code\n    activate Database\n    deactivate Database\n    deactivate Backend\n\n    User->>Peer: Shares party code with peer(s)\n    activate Peer\n\n    Peer->>Backend: Joins party using code\n    activate Backend\n    Backend->>Database: Updates party members count\n    activate Database\n    Database--\x3e>Backend: Party size updated\n    deactivate Database\n    Backend--\x3e>User: Displays party size\n    deactivate Backend\n\n    User->>QuestTab: Selects "Start Quest" button when party is 2-4 members\n    activate QuestTab\n    QuestTab->>Backend: Starts the quest\n     deactivate QuestTab\n    activate Backend\n    Backend->>Database: Updates quest status\n    activate Database\n    Database--\x3e>Backend: Quest Started set to true\n    deactivate Database\n\n    Backend--\x3e>User: Quest has started\n    deactivate User\n    Backend--\x3e>Peer: Quest has started\n    deactivate Peer\n    deactivate Backend'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects the \u201cQuests\u201d tab."}),"\n",(0,n.jsx)(a.li,{children:"The user selects \u201cMy Quests\u201d."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the quest they want to do."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u201cStart Quest\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The user creates a party code and shares it with their peer(s)."}),"\n",(0,n.jsx)(a.li,{children:"The user waits for party size to be at two to four members, then clicks the \u201cStart Quest\u201d button."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-7---join-a-party",children:"Use Case 7 - Join a Party"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to join another user\u2019s party."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant JoinPartyForm\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page with "Join Party" button\n    HomePage->>JoinPartyForm: Clicks "Join Party" button\n    deactivate HomePage\n\n    activate JoinPartyForm\n    JoinPartyForm--\x3e>User: Displays form to enter party code\n    JoinPartyForm--\x3e>User: Displays "join" button\n    User->>JoinPartyForm: Enters party code\n    User->>JoinPartyForm: Selects "Join" button\n    JoinPartyForm->>Backend: Sends party code to backend\n    activate Backend\n    Backend->>Database: Validates party code and updates party members\n    activate Database\n    Database--\x3e>Backend: Party code valid, member added\n    deactivate Database\n    Backend--\x3e>JoinPartyForm: Confirms successful party join\n    deactivate Backend\n    JoinPartyForm--\x3e>User: Displays confirmation of joining the party\n    deactivate User\n    deactivate JoinPartyForm'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user clicks on the \u201cJoin Party\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The user enters the party code."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u201cJoin\u201d button."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-8---guild-creation",children:"Use Case 8 - Guild Creation"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to create a guild."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant GuildsTab\n    participant CreateGuildForm\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    HomePage->>GuildsTab: Selects "Guild" tab\n    deactivate HomePage\n\n\n    activate GuildsTab\n    GuildsTab--\x3e>User: Displays "Create Guild" button\n\n    GuildsTab->>CreateGuildForm: Selects "Create Guild" button\n    deactivate GuildsTab\n\n    activate CreateGuildForm\n    CreateGuildForm--\x3e>User: Displays form (Guild name, description, symbol, code)\n    User->>CreateGuildForm: Fills out form\n    User->>CreateGuildForm: Selects "Confirm" button\n    CreateGuildForm->>Backend: Sends form data to backend\n    deactivate CreateGuildForm\n\n    activate Backend\n    Backend->>Database: Stores new guild details\n    activate Database\n    Database--\x3e>Backend: Confirms guild creation\n    deactivate Database\n    Backend--\x3e>GuildsTab: Confirms successful guild creation\n    deactivate Backend\n\n    activate GuildsTab\n    GuildsTab--\x3e>User: Displays confirmation of guild creation\n    deactivate User\n    deactivate GuildsTab'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects the \u201cGuilds\u201d tab."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u201cCreate Guild\u201d button."}),"\n",(0,n.jsxs)(a.li,{children:["The user fills out a form for the following:","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Guild name"}),"\n",(0,n.jsx)(a.li,{children:"Guild description"}),"\n",(0,n.jsx)(a.li,{children:"Guild symbol"}),"\n",(0,n.jsx)(a.li,{children:"Guild Code"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:"The user reviews their input and selects \u201cconfirm\u201d."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-9---assign-quest-to-guild",children:"Use Case 9 - Assign Quest to Guild"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to assign a quest for their guild to complete"})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant QuestTab\n    participant GuildsTab\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    HomePage->>QuestTab: Selects "Quests" tab\n    deactivate HomePage\n\n    activate QuestTab\n    QuestTab--\x3e>User: Displays "My Quests"\n    User->>QuestTab: Selects "My Quests"\n    QuestTab--\x3e>User: Displays available quests\n    User->>QuestTab: Selects quest to assign\n    QuestTab--\x3e>User: Displays "Assign to Guild" button\n    User->>QuestTab: Selects "Assign to Guild" button\n    QuestTab--\x3e>GuildsTab: Displays available guilds\n    deactivate QuestTab\n\n    activate GuildsTab\n    User->>GuildsTab: Selects guild to assign quest\n    GuildsTab->>Backend: Sends assignment details to backend\n    deactivate GuildsTab\n\n    activate Backend\n    Backend->>Database: Updates quest assignment to selected guild\n    activate Database\n    Database--\x3e>Backend: Confirms quest assignment\n    deactivate Database\n    Backend--\x3e>GuildsTab: Confirms assignment to guild\n    deactivate Backend\n\n    activate GuildsTab\n    GuildsTab--\x3e>User: Displays confirmation of quest assignment\n    deactivate User\n    deactivate GuildsTab'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects the \u201cQuests\u201d tab."}),"\n",(0,n.jsx)(a.li,{children:"The user selects \u201cMy Quests\u201d."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the quest they want to assign."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the \u201cAssign to Guild\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The user selects the guild to assign the quest to."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-10---join-a-guild",children:"Use Case 10 - Join a Guild"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to join another user\u2019s guild."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    participant HomePage\n    participant JoinGuildForm\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page with "Join Guild" button\n    HomePage->>JoinGuildForm: Clicks "Join Guild" button\n    deactivate HomePage\n\n    activate JoinGuildForm\n    JoinGuildForm--\x3e>User: Displays form to enter guild code\n    JoinGuildForm--\x3e>User: Dispalys "Join" button\n    User->>JoinGuildForm: Enters guild code\n    User->>JoinGuildForm: Selects "Join" button\n    JoinGuildForm->>Backend: Sends guild code to backend\n    deactivate JoinGuildForm\n\n    activate Backend\n    Backend->>Database: Validates guild code and adds user to guild\n    activate Database\n    Database--\x3e>Backend: Guild code valid, user added to guild\n    deactivate Database\n    Backend--\x3e>JoinGuildForm: Confirms successful guild join\n    deactivate Backend\n\n    activate JoinGuildForm\n    JoinGuildForm--\x3e>User: Displays confirmation of joining the guild\n    deactivate User\n    deactivate JoinGuildForm'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user clicks on the \u201cJoin Guild\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The user enters the guild code."}),"\n",(0,n.jsx)(a.li,{children:"The user selects \u201cJoin\u201d button."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-11---creating-a-guild-party-to-start-a-quest",children:"Use Case 11 - Creating a Guild Party To Start a Quest"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"A user wants to start a quest inside a guild."})}),"\n",(0,n.jsx)(a.mermaid,{value:'sequenceDiagram\n    actor User\n    actor GuildMember as Guild Members\n    participant HomePage\n    participant GuildsTab\n    participant QuestBoard\n    participant Backend\n    participant Database as MongoDB\n\n    User->>HomePage: Navigates to home page\n    activate User\n    activate HomePage\n    HomePage--\x3e>User: Displays home page\n    HomePage->>GuildsTab: Selects "Guilds" tab\n    deactivate HomePage\n\n    activate GuildsTab\n    GuildsTab--\x3e>User: Displays "My Guilds"\n    User->>GuildsTab: Selects "My Guilds" and chooses a guild\n    GuildsTab--\x3e>User: Displays guild page with "Quest Board" button\n    GuildsTab->>QuestBoard: Selects "Quest Board"\n    deactivate GuildsTab\n\n    activate QuestBoard\n    QuestBoard--\x3e>User: Displays available quests\n    QuestBoard--\x3e>User: Displays available quests\n    User->>QuestBoard: Selects quest to start\n    QuestBoard--\x3e>User: Displays "Start Quest" button\n    User->>QuestBoard: Selects "Start Quest" and enters guild party name\n    QuestBoard->>Backend: Creates guild party\n    deactivate QuestBoard\n\n    activate Backend\n    Backend->>Database: Stores guild party details\n    activate Database\n    Database--\x3e>Backend: Confirms party created\n    deactivate Database\n    deactivate Backend\n\n    User->>GuildMember: Shares party details with guild members\n    activate GuildMember\n\n    GuildMember->>Backend: Joins guild party\n    deactivate GuildMember\n    activate Backend\n    Backend->>Database: Updates party members count\n    activate Database\n    Database--\x3e>Backend: Party size updated\n    deactivate Database\n    Backend--\x3e>User: Displays updated party size\n    deactivate Backend\n\n    User->>QuestBoard: Selects "Start Quest" when party size is 2-4 members\n    activate QuestBoard\n    QuestBoard->>Backend: Starts quest\n    activate Backend\n    Backend->>Database: Updates quest status\n    activate Database\n    Database--\x3e>Backend: Quest Started set to True\n    deactivate Database\n    deactivate QuestBoard\n    Backend--\x3e>User: Quest has started\n    deactivate User\n    deactivate Backend'}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"From the home page, the user selects \u201cGuilds\u201d tab."}),"\n",(0,n.jsx)(a.li,{children:"The user selects \u201cMy Guilds\u201d and then selects the guild they wish to start a quest in."}),"\n",(0,n.jsx)(a.li,{children:"In the guild, the user selects the \u201cQuest Board\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The user selects a quest they want to do."}),"\n",(0,n.jsx)(a.li,{children:"The user selects \u201cStart Quest\u201d which creates a guild party."}),"\n",(0,n.jsx)(a.li,{children:"The user enters a name for the guild party."}),"\n",(0,n.jsx)(a.li,{children:"User waits for the guild party size to be at two to four members, then selects the \u201cStart Quest\u201d button."}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"use-case-12---solving-a-problem-in-a-quest-gameplay",children:"Use Case 12 - Solving a Problem in a Quest (gameplay)"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Two users want to solve a coding problem together during a quest."})}),"\n",(0,n.jsx)(a.mermaid,{value:"sequenceDiagram\n    actor User1\n    actor User2 \n    participant GPTBot\n    participant GameEngine as Game\n    participant Backend\n    participant Database as MongoDB\n\n    activate User1\n    activate User2\n    activate Backend\n    Backend->>GameEngine: Provides first problem\n    activate GameEngine\n    GameEngine--\x3e>User1: Displays coding problem\n    GameEngine--\x3e>User2: Displays coding problem\n    User1->>GameEngine: Presses \"Begin\" button\n    \n    GameEngine->>Backend: Starts timer\n    Backend--\x3e>GameEngine: Timer Ticks Down\n    GameEngine--\x3e>User1: Display Timer Tick Down\n    GameEngine--\x3e>User2: Display Timer Tick Down\n    User1->>GameEngine: Writes code in text box\n    User1->>GameEngine: Clicks \"Submit\" button\n    GameEngine->>Backend: Receives code and ends User1's turn\n    Backend->>Database: Stores User1's code submission\n    activate Database\n    deactivate Database\n    GameEngine--\x3e>User1: Displays current code entered\n    GameEngine--\x3e>User2: Displays current code entered\n    GameEngine->Backend: Reset Timer for User 2\n    GameEngine--\x3e>User2: Display their turn starts now\n    GameEngine->Backend: Start Timer\n    Backend--\x3eGameEngine: Timer Ticks Down\n    GameEngine--\x3e>User2: Display Time Tick Down\n    GameEngine--\x3e>User1: Display Time Tick Down\n    User2->>GameEngine: Writes code in text box\n    User2->>GameEngine: Clicks \"Submit\" button\n    \n    GameEngine->>Backend: Receives code and ends User2's turn\n    \n    Backend->>Database: Stores User2's code submission\n    activate Database\n    deactivate Database\n    GameEngine--\x3e>User1: Displays current code entered\n    GameEngine--\x3e>User2: Displays current code entered\n    deactivate GameEngine\n    Backend->>GPTBot: Sends final submission for analysis\n    activate GPTBot\n    GPTBot--\x3e>Backend: Rates solution (1-3)\n    deactivate GPTBot\n    Backend--\x3e>User1: Displays party's rating\n    Backend--\x3e>User2: Displays party's rating\n    deactivate Backend\n    deactivate User1\n    deactivate User2\n    alt Solution is incorrect\n        activate User1\n        Backend->>GameEngine: Party loses health\n        activate GameEngine\n        activate Backend\n        GameEngine->>Backend: Resets timer for next turn\n        deactivate GameEngine\n        Backend--\x3e>User1: User 1 goes again for another turn\n        deactivate Backend\n        deactivate User1\n       \n    end"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"The users are given their first problem."}),"\n",(0,n.jsx)(a.li,{children:"User 1 is randomly selected and when the party is done reading the problem, user 1 presses the \u201cBegin\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"The timer begins and user 1 starts to write code in the provided text box."}),"\n",(0,n.jsx)(a.li,{children:"User 1 clicks the \u201cSubmit\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"User 1\u2019s turn is done and the timer restarts."}),"\n",(0,n.jsx)(a.li,{children:"The timer begins as it is now user 2's turn to write code in the provided text box."}),"\n",(0,n.jsx)(a.li,{children:"User 2 clicks the \u201cSubmit\u201d button."}),"\n",(0,n.jsx)(a.li,{children:"GPT-bot analyzes the final submission and rates the party\u2019s solution from 1 to 3."}),"\n",(0,n.jsx)(a.li,{children:"If the final submission is incorrect, the party loses health, the timer resets, and user 1 starts a new turn."}),"\n"]})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>c});var n=t(96540);const s={},i=n.createContext(s);function r(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);